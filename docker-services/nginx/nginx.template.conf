worker_processes 1;

user nobody nogroup;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  accept_mutex off;
}

http {
  include mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log;
  sendfile on;

  # Define the usage of the gzip compression algorithm to reduce the amount of data to transmit
  gzip  on;

  upstream app_server {
    # server unix:/tmp/gunicorn.sock fail_timeout=0;
    # This variable will be replace from Dockerfile and value is retrieved from env variable from github secrets
    server ${ECR_APP_SERVER}:8000;
  }

  server {
    listen 80;
    client_max_body_size 4G;

    # server_name example.com;

    keepalive_timeout 5;

    # path for static files
    root /app;

    location / {
      try_files $uri @proxy_to_app;
    }

    location /elb-status {
      return 200;
      # because default content-type is application/octet-stream,
      # browser will offer to "save the file"...
      # the next line allows you to see it in the browser so you can test 
      add_header Content-Type text/plain;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;

    location = /500.html {
      root /app;
    }

    location /static {
      alias /app/static;
    }
  }
}
